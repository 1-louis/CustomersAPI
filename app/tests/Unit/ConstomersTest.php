<?php
declare(strict_types=1);
namespace App\Tests\Unit;


use App\Entity\Admin;
use App\Entity\customers;
use PHPUnit\Framework\TestCase;

class ConstomersTest extends TestCase {

    private Admin $custom;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->custom = new Admin();
    }
    public function testGetElmail(): void
    {
        $value = 'test@test.fr';
        $response = $this->custom->setEMAIL($value);

        self::assertInstanceOf(Admin::class, $response);
        self::assertEquals($value, $this->custom->getEMAIL());

    }

    public function testGetRoles(): void
    {
        $value = ['ROLE_ADMIN'];
        $response = $this->custom->setRoles($value);

        self::assertInstanceOf(Admin::class, $response);
        self::assertContains('ROLE_USER', $this->custom->getRoles());
        self::assertContains('ROLE_ADMIN', $this->custom->getRoles());
    }
    public function testGetEffect(): void
    {
        $value = new customers();
        self::assertInstanceOf(Admin::class, $response);
        self::assertCount( 1,$this->custom->getEffectifsId());
        self::assertTrue($this->custom->getEffectifsId()->contains($value));

        $response = $this->count()->removeEffectif($value);

        self::assertInstanceOf(Admin::class, $response);
        self::assertCount( 1,$this->custom->getEffectifsId());
        self::assertFalse($this->custom->getEffectifsId()->contains($value));



    }
}